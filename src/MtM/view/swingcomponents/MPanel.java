/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MtM.view.swingcomponents;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JPanel;

/**
 *
 * @author Colin
 */
public class MPanel extends JPanel {

    private final MButton[] btnArray;
    private int index, selected;

    /**
     * Creates new form MinionPane
     */
    public MPanel() {
        initComponents();
        btnArray = new MButton[20];

        index = 0;
    }

    public void addMBtn() {
        MButton newBtn = new MButton();
        int size = getWidth() - 20;
        newBtn.setPreferredSize(new Dimension(size, size / 2));
        newBtn.setLocation(10, 10 + index * (size + 10));
        newBtn.setBtnID(index);
        btnArray[index] = newBtn;
        setPreferredSize(new Dimension(size, 20 + (size / 2 + 10) * (index + 1)));
        index++;
        add(newBtn);
        revalidate();
        newBtn.setMPanel(this);
        newBtn.processPress();
    }

    public void processSelection(int id) {
        selected = id;
        for (int i = 0; i < index; i++) {
            if (btnArray[i] == null || i == selected) {
                continue;
            }
            btnArray[i].setSelected(false);
        }
        
        fireActionEvent(new ActionEvent(this, ActionEvent.ACTION_FIRST, "" + id));
    }
    
    public void addActionListener(ActionListener l) {
        listenerList.add(ActionListener.class, l);
    }
    
    private void swap(int i1, int i2) {
        MButton temp = btnArray[i1];
        btnArray[i1] = btnArray[i2];
        btnArray[i2] = temp;
    }
    
    protected void fireActionEvent(ActionEvent e) {
        for(ActionListener a : listenerList.getListeners(ActionListener.class)) {
            a.actionPerformed(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(60, 400));
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 10));
        getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
