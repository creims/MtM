/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MtM.view;

import MtM.model.business.manager.Game;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Colin
 */
public class MtM extends javax.swing.JFrame {

    private Timer timer;
    private Game game;
    private static final String SAVE_PATH = "./save/";

    /**
     * should be called after a game is loaded to update things
     */
    private void updateOnLoad() {
        MinionBtnGroup.clearSelection();
        MinionInfo.setText(null);
        MinionBtn1.setText(game.getMinionName(0));
        MinionBtn2.setText(game.getMinionName(1));
        MinionBtn3.setText(game.getMinionName(2));
        MinionBtn4.setText(game.getMinionName(3));
        MinionBtn5.setText(game.getMinionName(4));
        
        this.setTitle("Manage the Minions - " + game.getSaveFile());
    }

    private void saveAs() {
        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File(SAVE_PATH));
        int returnVal = fc.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                game.saveGame(file.toString());
            } catch (FileNotFoundException ex) {
                log("Save failed.");
            }
            log("Game saved as: " + file.getName());
        }
    }

    private void log(String s) {
        Log.append(s + '\n');
    }

    private void openFile() {
        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File(SAVE_PATH));
        int returnVal = fc.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            
            if(game.loadGame(file.getName())) {
                updateOnLoad();
                log("Game loaded: " + file.getName());
            } else {
                log("Load FAILED: " + file.getName());
            }
            
            
        }
    }

    class Updater implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            System.out.println("tick");
        }

    }

    /**
     * Creates new form MtM
     */
    public MtM() {
        initComponents();
        game = new Game();
        timer = new Timer(game.getTickRate(), new Updater());

        MinionBtnGroup.add(MinionBtn1);
        MinionBtnGroup.add(MinionBtn2);
        MinionBtnGroup.add(MinionBtn3);
        MinionBtnGroup.add(MinionBtn4);
        MinionBtnGroup.add(MinionBtn5);

        updateOnLoad();

        timer.start();

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent winEvt) {
                try {
                    game.saveGame();
                    game.saveProps();
                    System.exit(0);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MtM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MinionBtnGroup = new javax.swing.ButtonGroup();
        MinionBtn1 = new javax.swing.JToggleButton();
        MinionBtn2 = new javax.swing.JToggleButton();
        MinionBtn3 = new javax.swing.JToggleButton();
        MinionBtn4 = new javax.swing.JToggleButton();
        MinionBtn5 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MinionInfo = new javax.swing.JTextArea();
        MissionInfo = new javax.swing.JScrollPane();
        MinionReady1 = new javax.swing.JLabel();
        MinionReady2 = new javax.swing.JLabel();
        MinionReady3 = new javax.swing.JLabel();
        MinionReady4 = new javax.swing.JLabel();
        MinionReady5 = new javax.swing.JLabel();
        LogPane = new javax.swing.JScrollPane();
        Log = new javax.swing.JTextArea();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        FileSave = new javax.swing.JMenuItem();
        FileSaveAs = new javax.swing.JMenuItem();
        FileOpen = new javax.swing.JMenuItem();
        DebugMenu = new javax.swing.JMenu();
        DebugSetTickRate = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MinionBtn1.setText("Minion One");
        MinionBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinionBtn1ActionPerformed(evt);
            }
        });

        MinionBtn2.setText("Minion Two");
        MinionBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinionBtn2ActionPerformed(evt);
            }
        });

        MinionBtn3.setText("Minion Three");
        MinionBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinionBtn3ActionPerformed(evt);
            }
        });

        MinionBtn4.setText("Minion Four");
        MinionBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinionBtn4ActionPerformed(evt);
            }
        });

        MinionBtn5.setText("Minion Five");
        MinionBtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinionBtn5ActionPerformed(evt);
            }
        });

        MinionInfo.setEditable(false);
        MinionInfo.setColumns(20);
        MinionInfo.setRows(5);
        jScrollPane1.setViewportView(MinionInfo);

        MinionReady1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MinionReady1.setText("Minion Ready");

        MinionReady2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MinionReady2.setText("Minion Ready");

        MinionReady3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MinionReady3.setText("Minion Ready");

        MinionReady4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MinionReady4.setText("Minion Ready");

        MinionReady5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MinionReady5.setText("Minion Ready");

        Log.setEditable(false);
        Log.setColumns(20);
        Log.setRows(5);
        LogPane.setViewportView(Log);

        FileMenu.setText("File");

        FileSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        FileSave.setText("Save");
        FileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileSaveActionPerformed(evt);
            }
        });
        FileMenu.add(FileSave);

        FileSaveAs.setText("Save As...");
        FileSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileSaveAsActionPerformed(evt);
            }
        });
        FileMenu.add(FileSaveAs);

        FileOpen.setText("Open...");
        FileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileOpenActionPerformed(evt);
            }
        });
        FileMenu.add(FileOpen);

        MenuBar.add(FileMenu);

        DebugMenu.setText("Debug");

        DebugSetTickRate.setText("Set Tick Rate");
        DebugSetTickRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebugSetTickRateActionPerformed(evt);
            }
        });
        DebugMenu.add(DebugSetTickRate);

        MenuBar.add(DebugMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogPane)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(MinionReady3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(MinionReady2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(MinionBtn3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(MinionBtn4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(MinionBtn5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(MinionBtn1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(MinionBtn2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(MinionReady1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(MinionReady4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 4, Short.MAX_VALUE))
                            .addComponent(MinionReady5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MissionInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(MinionBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinionReady1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinionBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinionReady2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinionBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinionReady3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinionBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinionReady4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MinionBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MinionReady5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(MissionInfo)
                            .addComponent(jScrollPane1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LogPane, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MinionBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinionBtn1ActionPerformed
        MinionInfo.setText(game.printMinion(0));
    }//GEN-LAST:event_MinionBtn1ActionPerformed

    private void MinionBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinionBtn2ActionPerformed
        MinionInfo.setText(game.printMinion(1));
    }//GEN-LAST:event_MinionBtn2ActionPerformed

    private void MinionBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinionBtn3ActionPerformed
        MinionInfo.setText(game.printMinion(2));
    }//GEN-LAST:event_MinionBtn3ActionPerformed

    private void MinionBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinionBtn4ActionPerformed
        MinionInfo.setText(game.printMinion(3));
    }//GEN-LAST:event_MinionBtn4ActionPerformed

    private void MinionBtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinionBtn5ActionPerformed
        MinionInfo.setText(game.printMinion(4));
    }//GEN-LAST:event_MinionBtn5ActionPerformed

    private void FileSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileSaveAsActionPerformed
        saveAs();
    }//GEN-LAST:event_FileSaveAsActionPerformed

    private void FileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileSaveActionPerformed
        try {
            if (!game.saveGame()) {
                saveAs();
            } else {
                log("Game saved.");
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MtM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_FileSaveActionPerformed

    private void DebugSetTickRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebugSetTickRateActionPerformed
        int newTickRate = Integer.parseInt(JOptionPane.showInputDialog(this, "New tick rate:"));
        timer.setDelay(newTickRate);
    }//GEN-LAST:event_DebugSetTickRateActionPerformed

    private void FileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileOpenActionPerformed
        openFile();
    }//GEN-LAST:event_FileOpenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MtM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MtM().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu DebugMenu;
    private javax.swing.JMenuItem DebugSetTickRate;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem FileOpen;
    private javax.swing.JMenuItem FileSave;
    private javax.swing.JMenuItem FileSaveAs;
    private javax.swing.JTextArea Log;
    private javax.swing.JScrollPane LogPane;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JToggleButton MinionBtn1;
    private javax.swing.JToggleButton MinionBtn2;
    private javax.swing.JToggleButton MinionBtn3;
    private javax.swing.JToggleButton MinionBtn4;
    private javax.swing.JToggleButton MinionBtn5;
    private javax.swing.ButtonGroup MinionBtnGroup;
    private javax.swing.JTextArea MinionInfo;
    private javax.swing.JLabel MinionReady1;
    private javax.swing.JLabel MinionReady2;
    private javax.swing.JLabel MinionReady3;
    private javax.swing.JLabel MinionReady4;
    private javax.swing.JLabel MinionReady5;
    private javax.swing.JScrollPane MissionInfo;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
